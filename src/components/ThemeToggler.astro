---
import { Icon } from 'astro-icon/components';

const themes = [
	{ name: 'os-default', icon: 'ri:contrast-fill' },
	{ name: 'light', icon: 'ri:sun-fill' },
	{ name: 'dark', icon: 'ri:moon-line' },
];
---

<div transition:persist class="flex gap-3 forced-colors:hidden">
	{
		themes.map((theme) => (
			<button
				type="button"
				class="theme-toggler opacity-75 aria-pressed:opacity-100 hover:opacity-100"
				aria-pressed="false"
				aria-label={`Switch to ${theme.name} theme`}
				data-theme={theme.name}
			>
				<Icon name={theme.icon} class="fill-current" />
			</button>
		))
	}
</div>
<script>
	import { theme } from '~/store';
	theme.subscribe((newTheme, oldTheme) => {
		oldTheme && document.documentElement.classList.remove(oldTheme);
		document
			.querySelector(`.theme-toggler[data-theme="${oldTheme}"]`)
			?.setAttribute('aria-pressed', 'false');
		document
			.querySelector(`.theme-toggler[data-theme="${newTheme}"]`)
			?.setAttribute('aria-pressed', 'true');
		document.documentElement.classList.add(newTheme);
	});

	const toggle = (document: Document) => {
		const initialTheme = theme.get();
		document.documentElement.classList.add(initialTheme);
		document
			.querySelector(`.theme-toggler[data-theme="${initialTheme}"]`)
			?.setAttribute('aria-pressed', 'true');

		const themeTogglers = document.querySelectorAll('.theme-toggler');
		themeTogglers.forEach((button) => {
			button.addEventListener('click', () => {
				const newTheme = button.getAttribute('data-theme')!;
				theme.set(newTheme);
			});
		});
	};
	toggle(document);
	document.addEventListener('astro:before-swap', (ev) => toggle(ev.newDocument));
</script>
